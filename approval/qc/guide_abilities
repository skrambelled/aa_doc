SYNOPSIS
-----------------------------------------------------------------------------
Any actions that a mortal can use in your projects which are related to their
'abilities' must perform an ability check. For example, if you have a room
where a player can climb a cliff it needs to check the player's climbing
ability, or if the player needs to search to find something it needs to check
their searching ability, and so forth.

DESCRIPTION
-----------------------------------------------------------------------------
Ability checks need to be set according to the difficulty of an area, which
is determined by analyzing the levels of monsters within it and using the
provided formula to set the ability checks accordingly.

Take the highest level monster in the area and multiply that by 4 to get the
maximum ability check (MAX), and multiply the monster level by 2 for the
minimum ability check (MIN). Once you have these numbers calculated you will
replace the "MAX/MIN" with those results. In other words, if your area has a
level 19 monster then you would end up with random(76-38)+38 as the outcome.
This formula gives players a consistant experience from area to area.

EXAMPLE
-----------------------------------------------------------------------------
#include <body_position.h>

void init() {
  ::init();

  add_action("do_climb", "climb");
}

int do_climb(string place) {
  if(place != "up" && place != "u" && place != "cliff") {
    notify_fail("Perhaps you should 'climb up' instead?\n");
    return 0;
  }

  if(this_player()->query_body_position() != STANDING) {
    write("You must be standing.\n");
    return 1;
  }

  if(this_player()->query_ability("climbing") > random(MAX-MIN)+MIN) {
    write("You climb up the cliff.\n");
    say(this_player()->query_name()+" climbs up the cliff.\n");
    this_player()->move_player("silent", ROOM"cliff_top");
    say(this_player()->query_name()+" arrives from below.\n");
    this_player()->force_followers("climb up", this_object());
    return 1;
  }

  write("You fail to climb up the cliff.\n");
  return 1;
}

SEE ALSO
-----------------------------------------------------------------------------
'man qc'
